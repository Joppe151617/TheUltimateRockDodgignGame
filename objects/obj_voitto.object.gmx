<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.spawnaa = 0;
io_clear();

if(global.voice) {
    audio_play_sound(snd_voitto,0,0);
}
get = http_get("https://turdg-7ac5f.firebaseio.com/.json");    
name = get_string_async("Enter your name: ","");

for (var i = 0; i &lt; 10; i++) {
    global.score_array[i, 0] = "downloading...";
    global.score_array[i, 1] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i_d = ds_map_find_value(async_load, "id");
    if (i_d == name) {
        if (ds_map_find_value(async_load, "status")) {
            if (ds_map_find_value(async_load, "result") != "") {
                global.name = ds_map_find_value(async_load, "result");

                for (i = 0; i &lt; 10; i++) {
                    if (score &gt; global.score_array[i, 1]) {
                        for (j = 9; j &gt; i; j--) {
                            global.score_array[j, 0] = global.score_array[j-1, 0];
                            global.score_array[j, 1] = global.score_array[j-1, 1];
                        }
                    global.score_array[i, 0] = global.name;
                    global.score_array[i, 1] = score;
                    break;
                    }
                }
                var map = ds_map_create();
     //           ds_map_add(map, "Authorization", "Basic dHVyZGdBZG1pbjprMFIxYTM=");
    
                for (i = 0; i &lt; 10; i++) {
                    var data = '{"name":"' + global.score_array[i, 0] + '","score":' + string(global.score_array[i, 1]) + '}';
                    http_request("https://turdg-7ac5f.firebaseio.com/highscore/" + string(i+1) + ".json", "PUT", map, data);                
                }
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i_d = ds_map_find_value(async_load, "id");
    if (i_d == get) {
        if (ds_map_find_value(async_load, "status") == 0) {
            var json = ds_map_find_value(async_load, "result");
            var resultMap = json_decode(json);
            var list = ds_map_find_value(resultMap, "highscore");
            for (var i = 0; i &lt; 10; i++) {
                var obj = ds_map_find_value(list, string(i+1));
                if (is_undefined(obj)) {
                    global.score_array[i, 0] = "unknown";
                    global.score_array[i, 1] = 0;
                } else {
                    global.score_array[i, 0] = ds_map_find_value(obj, "name");
                    global.score_array[i, 1] = ds_map_find_value(obj, "score");
                }
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(fnt_large);
draw_set_colour(c_red);
draw_text(room_width/2,room_height/2 - 100,"You Won!!");
draw_set_font(fnt_small);
draw_text(room_width/2,room_height/2 - 50,"press R to restart, Q to quit, M to menu");
draw_set_colour(c_black);

xx = 416;
yy = 360;

for (i = 0; i &lt; 10; i++) {
    yy += 30;
    draw_text(xx, yy, string(global.score_array[i, 0]));
    draw_text(xx + 200, yy, string(global.score_array[i, 1]));
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
